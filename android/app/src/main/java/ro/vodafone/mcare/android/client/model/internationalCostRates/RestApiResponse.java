/*
 * API-67 International Calling rates
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 10.0.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ro.vodafone.mcare.android.client.model.internationalCostRates;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import ro.vodafone.mcare.android.client.model.realm.TransactionFault;

/**
 * API response object for all API requests reaching server running in a normal state
 */
@ApiModel(description = "API response object for all API requests reaching server running in a normal state")
public class RestApiResponse {
  @SerializedName("transactionStatus")
  private Integer transactionStatus = null;

  @SerializedName("timeToLive")
  private Long timeToLive = null;

  @SerializedName("transactionSuccess")
  private InternationalCallingRateSuccess transactionSuccess = null;

  @SerializedName("transactionFault")
  private TransactionFault transactionFault = null;

  public RestApiResponse transactionStatus(Integer transactionStatus) {
    this.transactionStatus = transactionStatus;
    return this;
  }

   /**
   * status describing transaction state. 0 - Sucess, 1 - Warning, 2- Error
   * @return transactionStatus
  **/
  @ApiModelProperty(required = true, value = "status describing transaction state. 0 - Sucess, 1 - Warning, 2- Error")
  public Integer getTransactionStatus() {
    return transactionStatus;
  }

  public void setTransactionStatus(Integer transactionStatus) {
    this.transactionStatus = transactionStatus;
  }

  public RestApiResponse timeToLive(Long timeToLive) {
    this.timeToLive = timeToLive;
    return this;
  }

   /**
   * recommended time when response cache should expire. Sent in timestamp format. If cache is not recommended, API calling current time will be sent back.
   * @return timeToLive
  **/
  @ApiModelProperty(required = true, value = "recommended time when response cache should expire. Sent in timestamp format. If cache is not recommended, API calling current time will be sent back.")
  public Long getTimeToLive() {
    return timeToLive;
  }

  public void setTimeToLive(Long timeToLive) {
    this.timeToLive = timeToLive;
  }

  public RestApiResponse transactionSuccess(InternationalCallingRateSuccess transactionSuccess) {
    this.transactionSuccess = transactionSuccess;
    return this;
  }

   /**
   * Get transactionSuccess
   * @return transactionSuccess
  **/
  @ApiModelProperty(value = "")
  public InternationalCallingRateSuccess getTransactionSuccess() {
    return transactionSuccess;
  }

  public void setTransactionSuccess(InternationalCallingRateSuccess transactionSuccess) {
    this.transactionSuccess = transactionSuccess;
  }

  public RestApiResponse transactionFault(TransactionFault transactionFault) {
    this.transactionFault = transactionFault;
    return this;
  }

   /**
   * Get transactionFault
   * @return transactionFault
  **/
  @ApiModelProperty(value = "")
  public TransactionFault getTransactionFault() {
    return transactionFault;
  }

  public void setTransactionFault(TransactionFault transactionFault) {
    this.transactionFault = transactionFault;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestApiResponse restApiResponse = (RestApiResponse) o;
    return Objects.equals(this.transactionStatus, restApiResponse.transactionStatus) &&
        Objects.equals(this.timeToLive, restApiResponse.timeToLive) &&
        Objects.equals(this.transactionSuccess, restApiResponse.transactionSuccess) &&
        Objects.equals(this.transactionFault, restApiResponse.transactionFault);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionStatus, timeToLive, transactionSuccess, transactionFault);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestApiResponse {\n");
    
    sb.append("    transactionStatus: ").append(toIndentedString(transactionStatus)).append("\n");
    sb.append("    timeToLive: ").append(toIndentedString(timeToLive)).append("\n");
    sb.append("    transactionSuccess: ").append(toIndentedString(transactionSuccess)).append("\n");
    sb.append("    transactionFault: ").append(toIndentedString(transactionFault)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

