/**
 * API-27  Call Details Send Report
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.rest.requests;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * API Request object
 **/
@ApiModel(description = "API Request object")
public class CallDetailsReportRequest {
  
  @SerializedName("reportType")
  private String reportType = null;
  @SerializedName("email")
  private String email = null;
  @SerializedName("startDate")
  private Long startDate = null;
  @SerializedName("endDate")
  private Long endDate = null;
  @SerializedName("outputFormat")
  private String outputFormat = null;
  @SerializedName("subscriberId")
  private String subscriberId = null;
  @SerializedName("banId")
  private String banId = null;
  @SerializedName("phoneNumber")
  private String phoneNumber = null;
  @SerializedName("category")
  private String category = null;
  @SerializedName("billClosedDate")
  private Long billClosedDate = null;
  @SerializedName("nationalInd")
  private Boolean nationalInd = null;
  @SerializedName("internationaInd")
  private Boolean internationaInd = null;
  @SerializedName("roamingInd")
  private Boolean roamingInd = null;

  /**
   * type of Call Details report being requested - BILLED or UNBILLED
   **/
  @ApiModelProperty(required = true, value = "type of Call Details report being requested - BILLED or UNBILLED")
  public String getReportType() {
    return reportType;
  }
  public void setReportType(String reportType) {
    this.reportType = reportType;
  }

  /**
   * email address for sending the report
   **/
  @ApiModelProperty(required = true, value = "email address for sending the report")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }

  /**
   * start date for UNBILLED report (Unix time), will be formatted to MM/dd/yyyy
   **/
  @ApiModelProperty(value = "start date for UNBILLED report (Unix time), will be formatted to MM/dd/yyyy")
  public Long getStartDate() {
    return startDate;
  }
  public void setStartDate(Long startDate) {
    this.startDate = startDate;
  }

  /**
   * end date for UNBILLED report (Unix time), will be formatted to MM/dd/yyyy
   **/
  @ApiModelProperty(value = "end date for UNBILLED report (Unix time), will be formatted to MM/dd/yyyy")
  public Long getEndDate() {
    return endDate;
  }
  public void setEndDate(Long endDate) {
    this.endDate = endDate;
  }

  /**
   * format in which report will be generated - AHTML (ActiveHTML) or CSV
   **/
  @ApiModelProperty(required = true, value = "format in which report will be generated - AHTML (ActiveHTML) or CSV")
  public String getOutputFormat() {
    return outputFormat;
  }
  public void setOutputFormat(String outputFormat) {
    this.outputFormat = outputFormat;
  }

  /**
   * postpaid subscription for which the BILLED report is generated; if 0 generate report for all subscribers
   **/
  @ApiModelProperty(value = "postpaid subscription for which the BILLED report is generated; if 0 generate report for all subscribers")
  public String getSubscriberId() {
    return subscriberId;
  }
  public void setSubscriberId(String subscriberId) {
    this.subscriberId = subscriberId;
  }

  /**
   * postpaid account for which the BILLED report is generated; required for BILLED report
   **/
  @ApiModelProperty(value = "postpaid account for which the BILLED report is generated; required for BILLED report")
  public String getBanId() {
    return banId;
  }
  public void setBanId(String banId) {
    this.banId = banId;
  }

  /**
   * postpaid phone number for which the UNBILLED report is generated, format xxxxxxxxx, required for UNBILLED report
   **/
  @ApiModelProperty(value = "postpaid phone number for which the UNBILLED report is generated, format xxxxxxxxx, required for UNBILLED report")
  public String getPhoneNumber() {
    return phoneNumber;
  }
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  /**
   * call category - DATE or VOCE or SMS or OTHER
   **/
  @ApiModelProperty(value = "call category - DATE or VOCE or SMS or OTHER")
  public String getCategory() {
    return category;
  }
  public void setCategory(String category) {
    this.category = category;
  }

  /**
   * bill closed date (Unix time), will be formatted to MM/dd/yyyy
   **/
  @ApiModelProperty(required = true, value = "bill closed date (Unix time), will be formatted to MM/dd/yyyy")
  public Long getBillClosedDate() {
    return billClosedDate;
  }
  public void setBillClosedDate(Long billClosedDate) {
    this.billClosedDate = billClosedDate;
  }

  /**
   * set to true if  access type - National is selected for BILLED and UNBILLED report
   **/
  @ApiModelProperty(value = "set to true if  access type - National is selected for BILLED and UNBILLED report")
  public Boolean getNationalInd() {
    return nationalInd;
  }
  public void setNationalInd(Boolean nationalInd) {
    this.nationalInd = nationalInd;
  }

  /**
   * set to true if access type - International is selected for BILLED and UNBILLED report
   **/
  @ApiModelProperty(value = "set to true if access type - International is selected for BILLED and UNBILLED report")
  public Boolean getInternationaInd() {
    return internationaInd;
  }
  public void setInternationaInd(Boolean internationaInd) {
    this.internationaInd = internationaInd;
  }

  /**
   * set to true if access type - Roaming is selected for BILLED and UNBILLED report
   **/
  @ApiModelProperty(value = "set to true if access type - Roaming is selected for BILLED and UNBILLED report")
  public Boolean getRoamingInd() {
    return roamingInd;
  }
  public void setRoamingInd(Boolean roamingInd) {
    this.roamingInd = roamingInd;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallDetailsReportRequest callDetailsReportRequest = (CallDetailsReportRequest) o;
    return (this.reportType == null ? callDetailsReportRequest.reportType == null : this.reportType.equals(callDetailsReportRequest.reportType)) &&
        (this.email == null ? callDetailsReportRequest.email == null : this.email.equals(callDetailsReportRequest.email)) &&
        (this.startDate == null ? callDetailsReportRequest.startDate == null : this.startDate.equals(callDetailsReportRequest.startDate)) &&
        (this.endDate == null ? callDetailsReportRequest.endDate == null : this.endDate.equals(callDetailsReportRequest.endDate)) &&
        (this.outputFormat == null ? callDetailsReportRequest.outputFormat == null : this.outputFormat.equals(callDetailsReportRequest.outputFormat)) &&
        (this.subscriberId == null ? callDetailsReportRequest.subscriberId == null : this.subscriberId.equals(callDetailsReportRequest.subscriberId)) &&
        (this.banId == null ? callDetailsReportRequest.banId == null : this.banId.equals(callDetailsReportRequest.banId)) &&
        (this.phoneNumber == null ? callDetailsReportRequest.phoneNumber == null : this.phoneNumber.equals(callDetailsReportRequest.phoneNumber)) &&
        (this.category == null ? callDetailsReportRequest.category == null : this.category.equals(callDetailsReportRequest.category)) &&
        (this.billClosedDate == null ? callDetailsReportRequest.billClosedDate == null : this.billClosedDate.equals(callDetailsReportRequest.billClosedDate)) &&
        (this.nationalInd == null ? callDetailsReportRequest.nationalInd == null : this.nationalInd.equals(callDetailsReportRequest.nationalInd)) &&
        (this.internationaInd == null ? callDetailsReportRequest.internationaInd == null : this.internationaInd.equals(callDetailsReportRequest.internationaInd)) &&
        (this.roamingInd == null ? callDetailsReportRequest.roamingInd == null : this.roamingInd.equals(callDetailsReportRequest.roamingInd));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.reportType == null ? 0: this.reportType.hashCode());
    result = 31 * result + (this.email == null ? 0: this.email.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    result = 31 * result + (this.endDate == null ? 0: this.endDate.hashCode());
    result = 31 * result + (this.outputFormat == null ? 0: this.outputFormat.hashCode());
    result = 31 * result + (this.subscriberId == null ? 0: this.subscriberId.hashCode());
    result = 31 * result + (this.banId == null ? 0: this.banId.hashCode());
    result = 31 * result + (this.phoneNumber == null ? 0: this.phoneNumber.hashCode());
    result = 31 * result + (this.category == null ? 0: this.category.hashCode());
    result = 31 * result + (this.billClosedDate == null ? 0: this.billClosedDate.hashCode());
    result = 31 * result + (this.nationalInd == null ? 0: this.nationalInd.hashCode());
    result = 31 * result + (this.internationaInd == null ? 0: this.internationaInd.hashCode());
    result = 31 * result + (this.roamingInd == null ? 0: this.roamingInd.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallDetailsReportRequest {\n");
    
    sb.append("  reportType: ").append(reportType).append("\n");
    sb.append("  email: ").append(email).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("  endDate: ").append(endDate).append("\n");
    sb.append("  outputFormat: ").append(outputFormat).append("\n");
    sb.append("  subscriberId: ").append(subscriberId).append("\n");
    sb.append("  banId: ").append(banId).append("\n");
    sb.append("  phoneNumber: ").append(phoneNumber).append("\n");
    sb.append("  category: ").append(category).append("\n");
    sb.append("  billClosedDate: ").append(billClosedDate).append("\n");
    sb.append("  nationalInd: ").append(nationalInd).append("\n");
    sb.append("  internationaInd: ").append(internationaInd).append("\n");
    sb.append("  roamingInd: ").append(roamingInd).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
