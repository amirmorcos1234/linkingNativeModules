/**
 * API-41  Postpaid offer eligibility and activation
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 6.0.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.client.model.beo.postpaid.activation;

import com.google.gson.annotations.SerializedName;

import java.util.List;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Object containing activation time and incompatible offers, if they exist
 **/
@ApiModel(description = "Object containing activation time and incompatible offers, if they exist")
public class ActivationEligibilitySuccess {
  
  @SerializedName("activationTime")
  private String activationTime = null;
  @SerializedName("incompatbileOffers")
  private List<OfferBasicInfo> incompatbileOffers = null;
  @SerializedName("hasETF")
  private Boolean hasETF = null;

  /**
   * Indicates if offer will be activated immediately (value \"NOW\") or at next bill cycle (value \"BC-1\")
   **/
  @ApiModelProperty(required = true, value = "Indicates if offer will be activated immediately (value \"NOW\") or at next bill cycle (value \"BC-1\")")
  public String getActivationTime() {
    return activationTime;
  }
  public void setActivationTime(String activationTime) {
    this.activationTime = activationTime;
  }

  /**
   * list of active offers that are incompatible with the offer about to be activated
   **/
  @ApiModelProperty(value = "list of active offers that are incompatible with the offer about to be activated")
  public List<OfferBasicInfo> getIncompatbileOffers() {
    return incompatbileOffers;
  }
  public void setIncompatbileOffers(List<OfferBasicInfo> incompatbileOffers) {
    this.incompatbileOffers = incompatbileOffers;
  }

  /**
   * Flag indicating that at least one of the incompatible active offers has an early termination fee
   **/
  @ApiModelProperty(value = "Flag indicating that at least one of the incompatible active offers has an early termination fee")
  public Boolean getHasETF() {
    return hasETF;
  }
  public void setHasETF(Boolean hasETF) {
    this.hasETF = hasETF;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivationEligibilitySuccess activationEligibilitySuccess = (ActivationEligibilitySuccess) o;
    return (this.activationTime == null ? activationEligibilitySuccess.activationTime == null : this.activationTime.equals(activationEligibilitySuccess.activationTime)) &&
        (this.incompatbileOffers == null ? activationEligibilitySuccess.incompatbileOffers == null : this.incompatbileOffers.equals(activationEligibilitySuccess.incompatbileOffers)) &&
        (this.hasETF == null ? activationEligibilitySuccess.hasETF == null : this.hasETF.equals(activationEligibilitySuccess.hasETF));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.activationTime == null ? 0: this.activationTime.hashCode());
    result = 31 * result + (this.incompatbileOffers == null ? 0: this.incompatbileOffers.hashCode());
    result = 31 * result + (this.hasETF == null ? 0: this.hasETF.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivationEligibilitySuccess {\n");
    
    sb.append("  activationTime: ").append(activationTime).append("\n");
    sb.append("  incompatbileOffers: ").append(incompatbileOffers).append("\n");
    sb.append("  hasETF: ").append(hasETF).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
