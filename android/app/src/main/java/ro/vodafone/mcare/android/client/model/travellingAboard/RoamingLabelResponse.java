/**
 * API-35  Active offers prepaid
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 6.0.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.client.model.travellingAboard;

import io.realm.RealmObject;
import io.realm.annotations.PrimaryKey;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Roaming Label Response
 **/
@ApiModel(description = "Roaming Label Response")
public class RoamingLabelResponse {

  @PrimaryKey
  private int id;

  @SerializedName("roamingLabel")
  private String roamingLabel = null;
  @SerializedName("isNationalOnly")
  private Boolean isNationalOnly = null;

  /**
   * roaming label
   **/
  @ApiModelProperty(value = "roaming label")
  public String getRoamingLabel() {
    return roamingLabel;
  }
  public void setRoamingLabel(String roamingLabel) {
    this.roamingLabel = roamingLabel;
  }

  /**
   * is National Only
   **/
  @ApiModelProperty(value = "is National Only")
  public Boolean getIsNationalOnly() {
    return isNationalOnly;
  }
  public void setIsNationalOnly(Boolean isNationalOnly) {
    this.isNationalOnly = isNationalOnly;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoamingLabelResponse roamingLabelResponse = (RoamingLabelResponse) o;
    return (this.roamingLabel == null ? roamingLabelResponse.roamingLabel == null : this.roamingLabel.equals(roamingLabelResponse.roamingLabel)) &&
        (this.isNationalOnly == null ? roamingLabelResponse.isNationalOnly == null : this.isNationalOnly.equals(roamingLabelResponse.isNationalOnly));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.roamingLabel == null ? 0: this.roamingLabel.hashCode());
    result = 31 * result + (this.isNationalOnly == null ? 0: this.isNationalOnly.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoamingLabelResponse {\n");
    
    sb.append("  roamingLabel: ").append(roamingLabel).append("\n");
    sb.append("  isNationalOnly: ").append(isNationalOnly).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
