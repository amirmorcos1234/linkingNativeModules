/**
 * API-62 Travelling Abroad Postpaid
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 12.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.client.model.travellingAboard;

import io.realm.RealmObject;
import io.realm.annotations.PrimaryKey;
import io.swagger.annotations.*;
import ro.vodafone.mcare.android.utils.RealmManager;

import com.google.gson.annotations.SerializedName;

/**
 * Object containing data associated with successful transaction
 **/
@ApiModel(description = "Object containing data associated with successful transaction")
public class AccessTypeEBU extends RealmObject {

  @PrimaryKey
  private long primaryKey;

  @SerializedName("isInternational")
  private Boolean isInternational = null;
  @SerializedName("isRoaming")
  private Boolean isRoaming = null;
  @SerializedName("productId")
  private String productId = null;
  @SerializedName("productSpecName")
  private String productSpecName = null;

  public AccessTypeEBU() {
    this.primaryKey = 1;
  }

  /**
   * Flag indicating if International access type is enabled for subscriber
   **/
  @ApiModelProperty(required = true, value = "Flag indicating if International access type is enabled for subscriber")
  public Boolean getIsInternational() {
    return isInternational;
  }
  public void setIsInternational(Boolean isInternational) {
    this.isInternational = isInternational;
  }

  /**
   * Flag indicating if Roaming access type is enabled for subscriber
   **/
  @ApiModelProperty(required = true, value = "Flag indicating if Roaming access type is enabled for subscriber")
  public Boolean getIsRoaming() {
    return isRoaming;
  }
  public void setIsRoaming(Boolean isRoaming) {
    this.isRoaming = isRoaming;
  }

  /**
   * productId from ODS
   **/
  @ApiModelProperty(required = true, value = "productId from ODS")
  public String getProductId() {
    return productId;
  }
  public void setProductId(String productId) {
    this.productId = productId;
  }

  /**
   * productName from ODS
   **/
  @ApiModelProperty(required = true, value = "productName from ODS")
  public String getProductSpecName() {
    return productSpecName;
  }
  public void setProductSpecName(String productSpecName) {
    this.productSpecName = productSpecName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessTypeEBU accessTypeEBU = (AccessTypeEBU) o;
    return (this.isInternational == null ? accessTypeEBU.isInternational == null : this.isInternational.equals(accessTypeEBU.isInternational)) &&
        (this.isRoaming == null ? accessTypeEBU.isRoaming == null : this.isRoaming.equals(accessTypeEBU.isRoaming)) &&
        (this.productId == null ? accessTypeEBU.productId == null : this.productId.equals(accessTypeEBU.productId)) &&
        (this.productSpecName == null ? accessTypeEBU.productSpecName == null : this.productSpecName.equals(accessTypeEBU.productSpecName));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.isInternational == null ? 0: this.isInternational.hashCode());
    result = 31 * result + (this.isRoaming == null ? 0: this.isRoaming.hashCode());
    result = 31 * result + (this.productId == null ? 0: this.productId.hashCode());
    result = 31 * result + (this.productSpecName == null ? 0: this.productSpecName.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessTypeEBU {\n");
    
    sb.append("  isInternational: ").append(isInternational).append("\n");
    sb.append("  isRoaming: ").append(isRoaming).append("\n");
    sb.append("  productId: ").append(productId).append("\n");
    sb.append("  productSpecName: ").append(productSpecName).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
