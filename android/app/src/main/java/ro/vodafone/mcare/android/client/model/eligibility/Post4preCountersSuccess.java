/**
 * API-31  Post4pre eligibility
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 5.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.client.model.eligibility;

import com.google.gson.annotations.SerializedName;

import io.realm.RealmObject;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Response object with data for scheduled recharges counters
 **/
@ApiModel(description = "Response object with data for scheduled recharges counters")
public class Post4preCountersSuccess extends RealmObject {
  
  @SerializedName("fixedDateCurrent")
  private Integer fixedDateCurrent = null;
  @SerializedName("fixedDateMax")
  private Integer fixedDateMax = null;
  @SerializedName("weeklyCurrent")
  private Integer weeklyCurrent = null;
  @SerializedName("weeklyMax")
  private Integer weeklyMax = null;
  @SerializedName("monthlyCurrent")
  private Integer monthlyCurrent = null;
  @SerializedName("monthlyMax")
  private Integer monthlyMax = null;

  /**
   * number of current fixed date scheduled recharges
   **/
  @ApiModelProperty(required = true, value = "number of current fixed date scheduled recharges")
  public Integer getFixedDateCurrent() {
    return fixedDateCurrent;
  }
  public void setFixedDateCurrent(Integer fixedDateCurrent) {
    this.fixedDateCurrent = fixedDateCurrent;
  }

  /**
   * number of maximum fixed date scheduled recharges
   **/
  @ApiModelProperty(required = true, value = "number of maximum fixed date scheduled recharges")
  public Integer getFixedDateMax() {
    return fixedDateMax;
  }
  public void setFixedDateMax(Integer fixedDateMax) {
    this.fixedDateMax = fixedDateMax;
  }

  /**
   * number of current weekly scheduled recharges
   **/
  @ApiModelProperty(required = true, value = "number of current weekly scheduled recharges")
  public Integer getWeeklyCurrent() {
    return weeklyCurrent;
  }
  public void setWeeklyCurrent(Integer weeklyCurrent) {
    this.weeklyCurrent = weeklyCurrent;
  }

  /**
   * number of maximum weekly scheduled recharges
   **/
  @ApiModelProperty(required = true, value = "number of maximum weekly scheduled recharges")
  public Integer getWeeklyMax() {
    return weeklyMax;
  }
  public void setWeeklyMax(Integer weeklyMax) {
    this.weeklyMax = weeklyMax;
  }

  /**
   * number of current monthly scheduled recharges
   **/
  @ApiModelProperty(required = true, value = "number of current monthly scheduled recharges")
  public Integer getMonthlyCurrent() {
    return monthlyCurrent;
  }
  public void setMonthlyCurrent(Integer monthlyCurrent) {
    this.monthlyCurrent = monthlyCurrent;
  }

  /**
   * number of maximum monthly scheduled recharges
   **/
  @ApiModelProperty(required = true, value = "number of maximum monthly scheduled recharges")
  public Integer getMonthlyMax() {
    return monthlyMax;
  }
  public void setMonthlyMax(Integer monthlyMax) {
    this.monthlyMax = monthlyMax;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Post4preCountersSuccess post4preCountersSuccess = (Post4preCountersSuccess) o;
    return (this.fixedDateCurrent == null ? post4preCountersSuccess.fixedDateCurrent == null : this.fixedDateCurrent.equals(post4preCountersSuccess.fixedDateCurrent)) &&
        (this.fixedDateMax == null ? post4preCountersSuccess.fixedDateMax == null : this.fixedDateMax.equals(post4preCountersSuccess.fixedDateMax)) &&
        (this.weeklyCurrent == null ? post4preCountersSuccess.weeklyCurrent == null : this.weeklyCurrent.equals(post4preCountersSuccess.weeklyCurrent)) &&
        (this.weeklyMax == null ? post4preCountersSuccess.weeklyMax == null : this.weeklyMax.equals(post4preCountersSuccess.weeklyMax)) &&
        (this.monthlyCurrent == null ? post4preCountersSuccess.monthlyCurrent == null : this.monthlyCurrent.equals(post4preCountersSuccess.monthlyCurrent)) &&
        (this.monthlyMax == null ? post4preCountersSuccess.monthlyMax == null : this.monthlyMax.equals(post4preCountersSuccess.monthlyMax));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.fixedDateCurrent == null ? 0: this.fixedDateCurrent.hashCode());
    result = 31 * result + (this.fixedDateMax == null ? 0: this.fixedDateMax.hashCode());
    result = 31 * result + (this.weeklyCurrent == null ? 0: this.weeklyCurrent.hashCode());
    result = 31 * result + (this.weeklyMax == null ? 0: this.weeklyMax.hashCode());
    result = 31 * result + (this.monthlyCurrent == null ? 0: this.monthlyCurrent.hashCode());
    result = 31 * result + (this.monthlyMax == null ? 0: this.monthlyMax.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Post4preCountersSuccess {\n");
    
    sb.append("  fixedDateCurrent: ").append(fixedDateCurrent).append("\n");
    sb.append("  fixedDateMax: ").append(fixedDateMax).append("\n");
    sb.append("  weeklyCurrent: ").append(weeklyCurrent).append("\n");
    sb.append("  weeklyMax: ").append(weeklyMax).append("\n");
    sb.append("  monthlyCurrent: ").append(monthlyCurrent).append("\n");
    sb.append("  monthlyMax: ").append(monthlyMax).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
