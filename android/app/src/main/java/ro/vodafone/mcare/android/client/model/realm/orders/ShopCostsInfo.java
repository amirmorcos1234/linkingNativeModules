/**
 * API-51 Shop Orders
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 7.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.client.model.realm.orders;

import com.google.gson.annotations.SerializedName;

import io.realm.RealmList;
import io.realm.RealmObject;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * object containing data about Cost Info
 **/
@ApiModel(description = "object containing data about Cost Info")
public class ShopCostsInfo extends RealmObject {
  
  @SerializedName("exchangeRate")
  private Float exchangeRate = null;
  @SerializedName("total")
  private Float total = null;
  @SerializedName("introducedCoupon")
  private String introducedCoupon = null;
  @SerializedName("numberOfLPPoints")
  private Double numberOfLPPoints = null;
  @SerializedName("usedLPsInEuro")
  private Double usedLPsInEuro = null;
  @SerializedName("couponValue")
  private Double couponValue = null;
  @SerializedName("discounts")
  private RealmList<ShopDiscount> discounts = null;

  /**
   * exchange rate
   **/
  @ApiModelProperty(value = "exchange rate")
  public Float getExchangeRate() {
    return exchangeRate;
  }
  public void setExchangeRate(Float exchangeRate) {
    this.exchangeRate = exchangeRate;
  }

  /**
   * total amout
   **/
  @ApiModelProperty(value = "total amout")
  public Float getTotal() {
    return total;
  }
  public void setTotal(Float total) {
    this.total = total;
  }

  /**
   * coupon value
   **/
  @ApiModelProperty(value = "coupon value")
  public String getIntroducedCoupon() {
    return introducedCoupon;
  }
  public void setIntroducedCoupon(String introducedCoupon) {
    this.introducedCoupon = introducedCoupon;
  }

  /**
   * number of loyalty points
   **/
  @ApiModelProperty(value = "number of loyalty points")
  public Double getNumberOfLPPoints() {
    return numberOfLPPoints;
  }
  public void setNumberOfLPPoints(Double numberOfLPPoints) {
    this.numberOfLPPoints = numberOfLPPoints;
  }

  /**
   * used loyalty points in euro
   **/
  @ApiModelProperty(value = "used loyalty points in euro")
  public Double getUsedLPsInEuro() {
    return usedLPsInEuro;
  }
  public void setUsedLPsInEuro(Double usedLPsInEuro) {
    this.usedLPsInEuro = usedLPsInEuro;
  }

  /**
   * coupon value
   **/
  @ApiModelProperty(value = "coupon value")
  public Double getCouponValue() {
    return couponValue;
  }
  public void setCouponValue(Double couponValue) {
    this.couponValue = couponValue;
  }

  /**
   * list of Shop Products from Catalog
   **/
  @ApiModelProperty(value = "list of Shop Products from Catalog")
  public RealmList<ShopDiscount> getDiscounts() {
    return discounts;
  }
  public void setDiscounts(RealmList<ShopDiscount> discounts) {
    this.discounts = discounts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopCostsInfo shopCostsInfo = (ShopCostsInfo) o;
    return (this.exchangeRate == null ? shopCostsInfo.exchangeRate == null : this.exchangeRate.equals(shopCostsInfo.exchangeRate)) &&
        (this.total == null ? shopCostsInfo.total == null : this.total.equals(shopCostsInfo.total)) &&
        (this.introducedCoupon == null ? shopCostsInfo.introducedCoupon == null : this.introducedCoupon.equals(shopCostsInfo.introducedCoupon)) &&
        (this.numberOfLPPoints == null ? shopCostsInfo.numberOfLPPoints == null : this.numberOfLPPoints.equals(shopCostsInfo.numberOfLPPoints)) &&
        (this.usedLPsInEuro == null ? shopCostsInfo.usedLPsInEuro == null : this.usedLPsInEuro.equals(shopCostsInfo.usedLPsInEuro)) &&
        (this.couponValue == null ? shopCostsInfo.couponValue == null : this.couponValue.equals(shopCostsInfo.couponValue)) &&
        (this.discounts == null ? shopCostsInfo.discounts == null : this.discounts.equals(shopCostsInfo.discounts));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.exchangeRate == null ? 0: this.exchangeRate.hashCode());
    result = 31 * result + (this.total == null ? 0: this.total.hashCode());
    result = 31 * result + (this.introducedCoupon == null ? 0: this.introducedCoupon.hashCode());
    result = 31 * result + (this.numberOfLPPoints == null ? 0: this.numberOfLPPoints.hashCode());
    result = 31 * result + (this.usedLPsInEuro == null ? 0: this.usedLPsInEuro.hashCode());
    result = 31 * result + (this.couponValue == null ? 0: this.couponValue.hashCode());
    result = 31 * result + (this.discounts == null ? 0: this.discounts.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopCostsInfo {\n");
    
    sb.append("  exchangeRate: ").append(exchangeRate).append("\n");
    sb.append("  total: ").append(total).append("\n");
    sb.append("  introducedCoupon: ").append(introducedCoupon).append("\n");
    sb.append("  numberOfLPPoints: ").append(numberOfLPPoints).append("\n");
    sb.append("  usedLPsInEuro: ").append(usedLPsInEuro).append("\n");
    sb.append("  couponValue: ").append(couponValue).append("\n");
    sb.append("  discounts: ").append(discounts).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
