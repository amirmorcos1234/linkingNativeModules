/**
 * API-40  Pending requests
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 6.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.client.model.beo.postpaid.offersInPending;


import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import ro.vodafone.mcare.android.client.model.realm.TransactionFault;

/**
 * API response object for all API requests reaching server running in a normal state
 **/
@ApiModel(description = "API response object for all API requests reaching server running in a normal state")
public class RestApiResponse {
  
  @SerializedName("transactionStatus")
  private Integer transactionStatus = null;
  @SerializedName("timeToLive")
  private Long timeToLive = null;
  @SerializedName("transactionFault")
  private TransactionFault transactionFault = null;

  /**
   * status describing transaction state. 0 - Sucess, 1 - Warning, 2- Error
   **/
  @ApiModelProperty(required = true, value = "status describing transaction state. 0 - Sucess, 1 - Warning, 2- Error")
  public Integer getTransactionStatus() {
    return transactionStatus;
  }
  public void setTransactionStatus(Integer transactionStatus) {
    this.transactionStatus = transactionStatus;
  }

  /**
   * recommended time when response cache should expire. Sent in timestamp format. If cache is not recommended, API calling current time will be sent back.
   **/
  @ApiModelProperty(required = true, value = "recommended time when response cache should expire. Sent in timestamp format. If cache is not recommended, API calling current time will be sent back.")
  public Long getTimeToLive() {
    return timeToLive;
  }
  public void setTimeToLive(Long timeToLive) {
    this.timeToLive = timeToLive;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public TransactionFault getTransactionFault() {
    return transactionFault;
  }
  public void setTransactionFault(TransactionFault transactionFault) {
    this.transactionFault = transactionFault;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestApiResponse restApiResponse = (RestApiResponse) o;
    return (this.transactionStatus == null ? restApiResponse.transactionStatus == null : this.transactionStatus.equals(restApiResponse.transactionStatus)) &&
        (this.timeToLive == null ? restApiResponse.timeToLive == null : this.timeToLive.equals(restApiResponse.timeToLive)) &&
        (this.transactionFault == null ? restApiResponse.transactionFault == null : this.transactionFault.equals(restApiResponse.transactionFault));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.transactionStatus == null ? 0: this.transactionStatus.hashCode());
    result = 31 * result + (this.timeToLive == null ? 0: this.timeToLive.hashCode());
    result = 31 * result + (this.transactionFault == null ? 0: this.transactionFault.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestApiResponse {\n");
    
    sb.append("  transactionStatus: ").append(transactionStatus).append("\n");
    sb.append("  timeToLive: ").append(timeToLive).append("\n");
    sb.append("  transactionFault: ").append(transactionFault).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
