/**
 * API-35  Active offers prepaid
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 6.0.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.client.model.beo.prepaid.activeOffers;

import com.google.gson.annotations.SerializedName;

import io.realm.RealmList;
import io.realm.RealmObject;
import io.realm.annotations.PrimaryKey;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * object containing data associated with successful transaction
 **/
@ApiModel(description = "object containing data associated with successful transaction")
public class ActiveOffersSuccess extends RealmObject{

  @PrimaryKey
  private long id;
  @SerializedName("isNationalOnly")
  private boolean isNationalOnly;
  @SerializedName("activeOffersList")
  private RealmList<ActiveOffer> activeOffersList = null;
  @SerializedName("activeServicesList")
  private RealmList<ActiveOffer> activeServicesList = null;
  @SerializedName("bonusAndEoOffersList")
  private RealmList<ActiveOffer> bonusAndEoOffersList = null;

  /**
   * list with active offers
   **/
  @ApiModelProperty(value = "list with active offers")
  public RealmList<ActiveOffer> getActiveOffersList() {
    return activeOffersList;
  }
  public void setActiveOffersList(RealmList<ActiveOffer> activeOffersList) {
    this.activeOffersList = activeOffersList;
  }

  /**
   * list with active services
   **/
  @ApiModelProperty(value = "list with active services")
  public RealmList<ActiveOffer> getActiveServicesList() {
    return activeServicesList;
  }
  public void setActiveServicesList(RealmList<ActiveOffer> activeServicesList) {
    this.activeServicesList = activeServicesList;
  }

  /**
   * list with active offers for bonuses and extraoptions
   **/
  @ApiModelProperty(value = "list with active offers for bonuses and extraoptions")
  public RealmList<ActiveOffer> getBonusAndEoOffersList() {
    return bonusAndEoOffersList;
  }
  public void setBonusAndEoOffersList(RealmList<ActiveOffer> bonusAndEoOffersList) {
    this.bonusAndEoOffersList = bonusAndEoOffersList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActiveOffersSuccess activeOffersSuccess = (ActiveOffersSuccess) o;
    return (this.activeOffersList == null ? activeOffersSuccess.activeOffersList == null : this.activeOffersList.equals(activeOffersSuccess.activeOffersList)) &&
        (this.activeServicesList == null ? activeOffersSuccess.activeServicesList == null : this.activeServicesList.equals(activeOffersSuccess.activeServicesList)) &&
        (this.bonusAndEoOffersList == null ? activeOffersSuccess.bonusAndEoOffersList == null : this.bonusAndEoOffersList.equals(activeOffersSuccess.bonusAndEoOffersList));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.activeOffersList == null ? 0: this.activeOffersList.hashCode());
    result = 31 * result + (this.activeServicesList == null ? 0: this.activeServicesList.hashCode());
    result = 31 * result + (this.bonusAndEoOffersList == null ? 0: this.bonusAndEoOffersList.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActiveOffersSuccess {\n");
    
    sb.append("  activeOffersList: ").append(activeOffersList).append("\n");
    sb.append("  activeServicesList: ").append(activeServicesList).append("\n");
    sb.append("  bonusAndEoOffersList: ").append(bonusAndEoOffersList).append("\n");
    sb.append("}\n");
    return sb.toString();
  }

  public boolean getNationalOnly() {
    return isNationalOnly;
  }

  public void setNationalOnly(boolean nationalOnly) {
    isNationalOnly = nationalOnly;
  }
}
