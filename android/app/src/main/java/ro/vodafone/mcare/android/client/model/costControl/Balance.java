/**
 * API-20 Cost Control
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 *
 * OpenAPI spec version: 3.1.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.client.model.costControl;

import com.google.gson.annotations.SerializedName;

import io.realm.RealmObject;
import io.realm.annotations.Ignore;
import io.realm.annotations.PrimaryKey;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * contains available amount and total amount for a balance type, depending on current subscription
 **/
@ApiModel(description = "contains available amount and total amount for a balance type, depending on current subscription")
public class Balance extends RealmObject{

  public static final String AMOUNT_TYPE_ID_STRING_KEY = "amountTypeIdString";
  public static final String USED_AMOUNT_KEY = "usedAmount";
  public static final String REMAINING_AMOUNT_KEY = "remainingAmount";
  public static final String TOTAL_AMOUNT_KEY = "totalAmount";
  public static final String CHUNK_MODEL_KEY = "chunkmodel";


  @Ignore
  private transient AmountTypeIdEnum amountTypeId = null;

  @Ignore
  private transient AmountUnitEnum amountUnit = null;

  @SerializedName("nameRO")
  private String nameRO = null;
  @SerializedName("groupSize")
  private int groupSize;
  @SerializedName("usedAmount")
  private Double  usedAmount = null;
  @SerializedName("remainingAmount")
  private Double  remainingAmount = null;
  @SerializedName("totalAmount")
  private Double  totalAmount = null;
  @SerializedName("iconId")
  private String iconId = null;

  @SerializedName("amountUnit")
  private String amountUnitString;

  @SerializedName("amountTypeId")
  @PrimaryKey
  private String amountTypeIdString;

  private Double totalAmountFUP = null;
  @SerializedName("remainingAmountFUP")
  private Double remainingAmountFUP = null;
  @SerializedName(CHUNK_MODEL_KEY)
  private Integer chunkmodel = null;
  @SerializedName("chunktotalcharge")
  private Double chunktotalcharge = null;
  @SerializedName("instanceId")
  private Long instanceId = null;

    /**
     * balance name (in Romanian)
     **/
    @ApiModelProperty(value = "balance name (in Romanian)")
    public String getNameRO() {
        return nameRO;
    }
    public void setNameRO(String nameRO) {
        this.nameRO = nameRO;
    }

  /**
   * mobile data - \"data\" (prepaid and postpaid), minutes - \"voice\" (prepaid and postpaid), messages - \"sms\" (postpaid), minutes and messages - \"vas\" (prepaid), ce vrei tu - \"cvt\" (prepaid), data chunks - \"chunk\"
   **/
  @ApiModelProperty(required = true, value = "mobile data - \"data\" (prepaid and postpaid), minutes - \"voice\" (prepaid and postpaid), messages - \"sms\" (postpaid), minutes and messages - \"vas\" (prepaid), ce vrei tu - \"cvt\" (prepaid), data chunks - \"chunk\"")
  public AmountTypeIdEnum getAmountTypeId() {
    try{
      amountTypeId= amountTypeId!=null ? amountTypeId:AmountTypeIdEnum.valueOf(amountTypeIdString);
    }catch (Exception e){
      e.printStackTrace();
    }
    return amountTypeId;
  }

  /**
   * avaiable values \"num\" - numeric, \"sec\" - seconds, \"min\" - minutes, \"kb\" - kilobytes, \"mb\" - megabytes, \"gb\" - gigabytes, \"unl\" - unlimited
   **/
  @ApiModelProperty(required = true, value = "avaiable values \"num\" - numeric, \"sec\" - seconds, \"min\" - minutes, \"kb\" - kilobytes, \"mb\" - megabytes, \"gb\" - gigabytes, \"unl\" - unlimited")
  public AmountUnitEnum getAmountUnit() {
      return (amountUnitString != null) ? AmountUnitEnum.valueOf(amountUnitString) : null;
  }

  /**
   * additional info used for chunks and balance group list
   **/
  @ApiModelProperty(value = "additional info used for chunks and balance group list")
  public Integer getGroupSize() {
    return groupSize;
  }
  public void setGroupSize(Integer groupSize) {
    this.groupSize = groupSize;
  }

  /**
   * represents amounts consumed by current subscription
   **/
  @ApiModelProperty(required = true, value = "represents amounts consumed by current subscription")
  public Double  getUsedAmount() {
    return usedAmount;
  }
  public void setUsedAmount(Double  usedAmount) {
    this.usedAmount = usedAmount;
  }

  /**
   * represents amounts which is available for current subscription
   **/
  @ApiModelProperty(required = true, value = "represents amounts which is available for current subscription")
  public Double  getRemainingAmount() {
    return remainingAmount;
  }
  public void setRemainingAmount(Double  remainingAmount) {
    this.remainingAmount = remainingAmount;
  }

  /**
   * represents initial available amount which was available right after an extraoption was activated. Not available for Prepaid users.
   **/
  @ApiModelProperty(value = "represents initial available amount which was available right after an extraoption was activated. Not available for Prepaid users.")
  public Double  getTotalAmount() {
    return totalAmount;
  }
  public void setTotalAmount(Double  totalAmount) {
    this.totalAmount = totalAmount;
  }


  public String getAmountTypeIdString() {
    return amountTypeIdString;
  }

  public void setAmountTypeIdString(String amountTypeIdString) {
    this.amountTypeIdString = amountTypeIdString;
  }

  public String getAmountUnitString() {
    return amountUnitString;
  }

  public void setAmountUnitString(String amountUnitString) {
    this.amountUnitString = amountUnitString;
  }

    /**
     * id for icon which is representing the current balance
     **/
    @ApiModelProperty(value = "id for icon which is representing the current balance")
    public String getIconId() {
        return iconId;
    }
    public void setIconId(String iconId) {
        this.iconId = iconId;
    }

  /**
   * total FUP amount
   **/
  @ApiModelProperty(value = "total FUP amount")
  public Double getTotalAmountFUP() {
    return totalAmountFUP;
  }
  public void setTotalAmountFUP(Double totalAmountFUP) {
    this.totalAmountFUP = totalAmountFUP;
  }

  /**
   * remeining FUP amount
   **/
  @ApiModelProperty(value = "remeining FUP amount")
  public Double getRemainingAmountFUP() {
    return remainingAmountFUP;
  }
  public void setRemainingAmountFUP(Double remainingAmountFUP) {
    this.remainingAmountFUP = remainingAmountFUP;
  }

  /**
   * type of chunk model
   **/
  @ApiModelProperty(value = "type of chunk model")
  public Integer getChunkmodel() {
    return chunkmodel;
  }
  public void setChunkmodel(Integer chunkmodel) {
    this.chunkmodel = chunkmodel;
  }

  /**
   * amount of dynamic allocation
   **/
  @ApiModelProperty(value = "amount of dynamic allocation")
  public Double getChunktotalcharge() {
    return chunktotalcharge;
  }
  public void setChunktotalcharge(Double chunktotalcharge) {
    this.chunktotalcharge = chunktotalcharge;
  }

  /**
   * offerInstanceId
   **/
  @ApiModelProperty(value = "offerInstanceId")
  public Long getInstanceId() {
    return instanceId;
  }
  public void setInstanceId(Long instanceId) {
    this.instanceId = instanceId;
  }
}
