/**
 * API-56 Bill Summary
 * Rest web service exposed by Vodafone API application and consumed by mobile device applications.
 * <p>
 * OpenAPI spec version: 6.0.2
 * <p>
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ro.vodafone.mcare.android.client.model.realm.billSummary;

import io.realm.RealmList;
import io.realm.RealmObject;
import io.realm.annotations.Ignore;
import io.swagger.annotations.*;
import ro.vodafone.mcare.android.card.costControl.currentBill.ExpandableListItemModel;
import ro.vodafone.mcare.android.presenter.adapterelements.billing.UnpayedBillOverviewCardElement;
import ro.vodafone.mcare.android.utils.RealmManager;

import com.google.gson.annotations.SerializedName;

import java.util.HashMap;
import java.util.List;

/**
 * Object containing data about bill summary
 **/
@ApiModel(description = "Object containing data about bill summary")
public class BillSummaryItem extends RealmObject implements UnpayedBillOverviewCardElement.UnpayedBillingOverViewItem {

    public static final String SID = "sid";
    public static final String PHONE_NUMBER = "phoneNumber";
    public static final String TOTAL_AMOUNT = "totalAmount";

    @SerializedName(PHONE_NUMBER)
    private String phoneNumber = null;
    @SerializedName(SID)
    private String sid = null;
    @SerializedName(TOTAL_AMOUNT)
    private Double totalAmount = null;
    @SerializedName("additional cost")
    private Double additionalCost = null;
    @SerializedName("subsTermAmountDetails")
    private RealmList<ServiceDetails> subsTermAmountDetails = null;

    @SerializedName("summaryDetails")
    private RealmList<SummaryDetails> summaryDetails = null;

    @Ignore
    private List<ExpandableListItemModel> listDataHeader;
    @Ignore
    private HashMap<ExpandableListItemModel, List<ExpandableListItemModel>> listDataChild;

    @Ignore
    private boolean isExpanded;

    /**
     * subscriber msisdn in 0xxxxxxxxx format
     **/
    @ApiModelProperty(required = true, value = "subscriber msisdn in 0xxxxxxxxx format")
    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    /**
     * subscriber id
     **/
    @ApiModelProperty(required = true, value = "subscriber id")
    public String getSid() {
        return sid;
    }

    public void setSid(String sid) {
        this.sid = sid;
    }

    /**
     * total invoice amount for subscriber
     **/
    @ApiModelProperty(value = "total invoice amount for subscriber")
    public Double getTotalAmount() {
        return totalAmount;
    }

    public void setTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
    }

    /**
     * additional costs for national + international + roaming services
     **/
    @ApiModelProperty(value = "additional costs for national + international + roaming services")
    public Double getAdditionalCost() {
        return additionalCost;
    }

    public void setAdditionalCost(Double additionalCost) {
        this.additionalCost = additionalCost;
    }

    /**
     * terminal detailed charges, if term = \"true\"
     **/
    @ApiModelProperty(value = "terminal detailed charges, if term = \"true\"")
    public RealmList<ServiceDetails> getSubsTermAmountDetails() {
        return subsTermAmountDetails;
    }

    public void setSubsTermAmountDetails(RealmList<ServiceDetails> subsTermAmountDetails) {
        this.subsTermAmountDetails = subsTermAmountDetails;
    }

    public RealmList<SummaryDetails> getSummaryDetails() {
        return summaryDetails;
    }

    public void setSummaryDetails(RealmList<SummaryDetails> summaryDetails) {
        RealmManager.startTransaction();
        this.summaryDetails = summaryDetails;
        RealmManager.update(this);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        BillSummaryItem that = (BillSummaryItem) o;

        if (phoneNumber != null ? !phoneNumber.equals(that.phoneNumber) : that.phoneNumber != null)
            return false;
        if (sid != null ? !sid.equals(that.sid) : that.sid != null) return false;
        if (totalAmount != null ? !totalAmount.equals(that.totalAmount) : that.totalAmount != null)
            return false;
        if (additionalCost != null ? !additionalCost.equals(that.additionalCost) : that.additionalCost != null)
            return false;
        if (subsTermAmountDetails != null ? !subsTermAmountDetails.equals(that.subsTermAmountDetails) : that.subsTermAmountDetails != null)
            return false;
        return summaryDetails != null ? summaryDetails.equals(that.summaryDetails) : that.summaryDetails == null;
    }

    @Override
    public int hashCode() {
        int result = phoneNumber != null ? phoneNumber.hashCode() : 0;
        result = 31 * result + (sid != null ? sid.hashCode() : 0);
        result = 31 * result + (totalAmount != null ? totalAmount.hashCode() : 0);
        result = 31 * result + (additionalCost != null ? additionalCost.hashCode() : 0);
        result = 31 * result + (subsTermAmountDetails != null ? subsTermAmountDetails.hashCode() : 0);
        result = 31 * result + (summaryDetails != null ? summaryDetails.hashCode() : 0);
        return result;
    }

    @Override
    public String toString() {
        return "BillSummaryItem{" +
                "phoneNumber='" + phoneNumber + '\'' +
                ", sid='" + sid + '\'' +
                ", totalAmount=" + totalAmount +
                ", additionalCost=" + additionalCost +
                ", subsTermAmountDetails=" + subsTermAmountDetails +
                ", summaryDetails=" + summaryDetails +
                '}';
    }

    @Override
    public int getType() {
        return UnpayedBillOverviewCardElement.UnpayedBillingOverViewItem.Bill_SUMMARRY_ITEM;
    }

    public List<ExpandableListItemModel> getListDataHeader() {
        return listDataHeader;
    }

    public void setListDataHeader(List<ExpandableListItemModel> listDataHeader) {
        this.listDataHeader = listDataHeader;
    }

    public HashMap<ExpandableListItemModel, List<ExpandableListItemModel>> getListDataChild() {
        return listDataChild;
    }

    public void setListDataChild(HashMap<ExpandableListItemModel, List<ExpandableListItemModel>> listDataChild) {
        this.listDataChild = listDataChild;
    }

    public boolean isExpanded() {
        return isExpanded;
    }

    public void setExpanded(boolean expanded) {
        isExpanded = expanded;
    }
}
